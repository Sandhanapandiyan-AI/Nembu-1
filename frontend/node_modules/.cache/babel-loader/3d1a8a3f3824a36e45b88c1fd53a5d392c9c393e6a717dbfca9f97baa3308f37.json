{"ast":null,"code":"var _jsxFileName = \"E:\\\\test project\\\\frontend\\\\src\\\\components\\\\QueryResultTable.tsx\";\nimport React from 'react';\nimport './QueryResultTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryResultTable = ({\n  markdown\n}) => {\n  // Parse markdown table into structured data\n  const parseMarkdownTable = markdown => {\n    var _lines$find;\n    const lines = markdown.split('\\n').filter(line => line.trim());\n\n    // Extract header row\n    const headerRow = (_lines$find = lines.find(line => line.startsWith('|'))) === null || _lines$find === void 0 ? void 0 : _lines$find.split('|').filter(cell => cell.trim()).map(cell => cell.trim());\n\n    // Skip header and separator rows, process data rows\n    const dataRows = lines.filter(line => line.startsWith('|') && !line.includes('---')).slice(1) // Skip header row\n    .map(line => line.split('|').filter(cell => cell.trim()).map(cell => cell.trim()));\n    return {\n      headerRow,\n      dataRows\n    };\n  };\n  const renderTable = () => {\n    const {\n      headerRow,\n      dataRows\n    } = parseMarkdownTable(markdown);\n    if (!headerRow || !dataRows.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No data to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"query-result-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"query-result-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headerRow.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataRows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cell\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"query-result-wrapper\",\n    children: renderTable()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = QueryResultTable;\nexport default QueryResultTable;\nvar _c;\n$RefreshReg$(_c, \"QueryResultTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","QueryResultTable","markdown","parseMarkdownTable","_lines$find","lines","split","filter","line","trim","headerRow","find","startsWith","cell","map","dataRows","includes","slice","renderTable","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","header","index","row","rowIndex","cellIndex","_c","$RefreshReg$"],"sources":["E:/test project/frontend/src/components/QueryResultTable.tsx"],"sourcesContent":["import React from 'react';\r\nimport './QueryResultTable.css';\r\n\r\ninterface QueryResultTableProps {\r\n  markdown: string;\r\n}\r\n\r\nconst QueryResultTable: React.FC<QueryResultTableProps> = ({ markdown }) => {\r\n  // Parse markdown table into structured data\r\n  const parseMarkdownTable = (markdown: string) => {\r\n    const lines = markdown.split('\\n').filter(line => line.trim());\r\n    \r\n    // Extract header row\r\n    const headerRow = lines.find(line => line.startsWith('|'))?.split('|')\r\n      .filter(cell => cell.trim())\r\n      .map(cell => cell.trim());\r\n    \r\n    // Skip header and separator rows, process data rows\r\n    const dataRows = lines\r\n      .filter(line => line.startsWith('|') && !line.includes('---'))\r\n      .slice(1) // Skip header row\r\n      .map(line => \r\n        line.split('|')\r\n          .filter(cell => cell.trim())\r\n          .map(cell => cell.trim())\r\n      );\r\n\r\n    return { headerRow, dataRows };\r\n  };\r\n\r\n  const renderTable = () => {\r\n    const { headerRow, dataRows } = parseMarkdownTable(markdown);\r\n\r\n    if (!headerRow || !dataRows.length) {\r\n      return <div className=\"no-results\">No data to display</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"query-result-table-container\">\r\n        <table className=\"query-result-table\">\r\n          <thead>\r\n            <tr>\r\n              {headerRow.map((header, index) => (\r\n                <th key={index}>{header}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dataRows.map((row, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {row.map((cell, cellIndex) => (\r\n                  <td key={cellIndex}>{cell}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"query-result-wrapper\">\r\n      {renderTable()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueryResultTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}