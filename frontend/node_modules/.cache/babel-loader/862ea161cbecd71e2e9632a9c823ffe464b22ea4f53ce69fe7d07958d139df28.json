{"ast":null,"code":"var _jsxFileName = \"E:\\\\test project\\\\frontend\\\\src\\\\components\\\\ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport ThinkingAnimation from './ThinkingAnimation';\nimport { CodeBlock } from './CodeBlock';\nimport QueryResultTable from './QueryResultTable';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isThinking, setIsThinking] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  const renderMessage = message => {\n    if (message.isUser) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message user-message\",\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Check if the message contains a table (starts with \"ğŸ“Š Found\")\n    if (message.text.includes(\"ğŸ“Š Found\")) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot-message\",\n        children: /*#__PURE__*/_jsxDEV(QueryResultTable, {\n          markdown: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message bot-message\",\n      children: /*#__PURE__*/_jsxDEV(CodeBlock, {\n        text: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  };\n  const handleSend = useCallback(async () => {\n    if (!inputText.trim()) return;\n    const userMessage = {\n      text: inputText,\n      isUser: true\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsThinking(true);\n    try {\n      const response = await axios.post('http://localhost:8000/api/chat', {\n        message: inputText\n      });\n      const botMessage = {\n        text: response.data.response,\n        isUser: false\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        text: 'Sorry, I encountered an error processing your request.',\n        isUser: false\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsThinking(false);\n    }\n  }, [inputText]);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-wrapper ${msg.isUser ? 'user' : 'bot'}`,\n        children: renderMessage(msg)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)), isThinking && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-wrapper bot\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot-message\",\n          children: /*#__PURE__*/_jsxDEV(ThinkingAnimation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Ask a question...\",\n        rows: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: !inputText.trim() || isThinking,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"hZvVjA/oYErdAwvy3m+oNgUtM6g=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","ThinkingAnimation","CodeBlock","QueryResultTable","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","inputText","setInputText","isThinking","setIsThinking","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","renderMessage","message","isUser","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","includes","markdown","handleSend","trim","userMessage","prev","response","post","botMessage","data","error","console","errorMessage","handleKeyPress","event","key","shiftKey","preventDefault","map","msg","index","ref","value","onChange","e","target","onKeyPress","placeholder","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/test project/frontend/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport ThinkingAnimation from './ThinkingAnimation';\r\nimport { CodeBlock } from './CodeBlock';\r\nimport QueryResultTable from './QueryResultTable';\r\nimport './ChatInterface.css';\r\n\r\ninterface Message {\r\n  text: string;\r\n  isUser: boolean;\r\n}\r\n\r\nconst ChatInterface: React.FC = () => {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isThinking, setIsThinking] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, scrollToBottom]);\r\n\r\n  const renderMessage = (message: Message) => {\r\n    if (message.isUser) {\r\n      return <div className=\"message user-message\">{message.text}</div>;\r\n    }\r\n\r\n    // Check if the message contains a table (starts with \"ğŸ“Š Found\")\r\n    if (message.text.includes(\"ğŸ“Š Found\")) {\r\n      return (\r\n        <div className=\"message bot-message\">\r\n          <QueryResultTable markdown={message.text} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"message bot-message\">\r\n        <CodeBlock text={message.text} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleSend = useCallback(async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const userMessage: Message = {\r\n      text: inputText,\r\n      isUser: true,\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n    setIsThinking(true);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/chat', {\r\n        message: inputText,\r\n      });\r\n\r\n      const botMessage: Message = {\r\n        text: response.data.response,\r\n        isUser: false,\r\n      };\r\n\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      const errorMessage: Message = {\r\n        text: 'Sorry, I encountered an error processing your request.',\r\n        isUser: false,\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsThinking(false);\r\n    }\r\n  }, [inputText]);\r\n\r\n  const handleKeyPress = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"messages-container\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message-wrapper ${msg.isUser ? 'user' : 'bot'}`}>\r\n            {renderMessage(msg)}\r\n          </div>\r\n        ))}\r\n        {isThinking && (\r\n          <div className=\"message-wrapper bot\">\r\n            <div className=\"message bot-message\">\r\n              <ThinkingAnimation />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <textarea\r\n          ref={inputRef}\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Ask a question...\"\r\n          rows={1}\r\n        />\r\n        <button onClick={handleSend} disabled={!inputText.trim() || isThinking}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}