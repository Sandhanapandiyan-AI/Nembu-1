{"ast":null,"code":"var _jsxFileName = \"E:\\\\test project\\\\frontend\\\\src\\\\components\\\\DataVisualization.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Pie, Bar, Line } from 'react-chartjs-2';\nimport './DataVisualization.css';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nconst DataVisualization = ({\n  data\n}) => {\n  _s();\n  const [chartType, setChartType] = useState('bar');\n  const [labelColumn, setLabelColumn] = useState(null);\n  const [valueColumn, setValueColumn] = useState(null);\n  const [isFormatted, setIsFormatted] = useState(true);\n\n  // Find numeric columns for values\n  const numericColumns = data.columns.filter(col => {\n    if (data.rows.length === 0) return false;\n    const value = data.rows[0][col];\n    return typeof value === 'number' || !isNaN(Number(value));\n  });\n\n  // Find string/categorical columns for labels\n  const categoricalColumns = data.columns.filter(col => {\n    if (data.rows.length === 0) return false;\n    const value = data.rows[0][col];\n    return typeof value === 'string' || value instanceof String;\n  });\n\n  // Auto-select appropriate columns on mount\n  React.useEffect(() => {\n    // Auto-select categorical column for labels\n    if (!labelColumn && categoricalColumns.length > 0) {\n      // Prefer department_name or name columns if available\n      const preferredLabelColumns = ['department_name', 'name', 'employee_first_name', 'employee_last_name'];\n      const preferredColumn = categoricalColumns.find(col => preferredLabelColumns.some(preferred => col.toLowerCase().includes(preferred.toLowerCase())));\n      setLabelColumn(preferredColumn || categoricalColumns[0]);\n    }\n\n    // Auto-select numeric column for values\n    if (!valueColumn && numericColumns.length > 0) {\n      // Prefer salary or amount columns if available\n      const preferredValueColumns = ['salary', 'amount', 'price', 'cost', 'revenue', 'count'];\n      const preferredColumn = numericColumns.find(col => preferredValueColumns.some(preferred => col.toLowerCase().includes(preferred.toLowerCase())));\n      setValueColumn(preferredColumn || numericColumns[0]);\n    }\n  }, [categoricalColumns, numericColumns, labelColumn, valueColumn]);\n  const handleVisualize = type => {\n    setChartType(type);\n  };\n  const formatValue = value => {\n    if (isFormatted) {\n      // Check if it's likely a currency value\n      if (valueColumn !== null && valueColumn !== void 0 && valueColumn.toLowerCase().includes('salary') || valueColumn !== null && valueColumn !== void 0 && valueColumn.toLowerCase().includes('price') || valueColumn !== null && valueColumn !== void 0 && valueColumn.toLowerCase().includes('cost') || valueColumn !== null && valueColumn !== void 0 && valueColumn.toLowerCase().includes('revenue')) {\n        return `$${value.toLocaleString(undefined, {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2\n        })}`;\n      }\n\n      // Format large numbers with commas\n      if (value >= 1000) {\n        return value.toLocaleString();\n      }\n\n      // Format percentages\n      if (valueColumn !== null && valueColumn !== void 0 && valueColumn.toLowerCase().includes('percent') || valueColumn !== null && valueColumn !== void 0 && valueColumn.toLowerCase().includes('rate')) {\n        return `${value.toFixed(2)}%`;\n      }\n    }\n    return String(value);\n  };\n  const prepareChartData = () => {\n    if (!labelColumn || !valueColumn || !data.rows.length) {\n      return {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: []\n        }]\n      };\n    }\n\n    // Group data by label column and sum values\n    const groupedData = {};\n    data.rows.forEach(row => {\n      const label = String(row[labelColumn]);\n      const value = Number(row[valueColumn]);\n      if (!isNaN(value)) {\n        if (groupedData[label]) {\n          groupedData[label] += value;\n        } else {\n          groupedData[label] = value;\n        }\n      }\n    });\n\n    // Generate colors\n    const generateColors = count => {\n      const colors = [];\n      for (let i = 0; i < count; i++) {\n        const hue = i * 137 % 360; // Use golden angle for nice distribution\n        colors.push(`hsl(${hue}, 70%, 60%)`);\n      }\n      return colors;\n    };\n    const labels = Object.keys(groupedData);\n    const values = Object.values(groupedData);\n    const colors = generateColors(labels.length);\n    return {\n      labels,\n      datasets: [{\n        label: valueColumn,\n        data: values,\n        backgroundColor: colors,\n        borderColor: colors.map(color => color.replace('60%', '50%')),\n        borderWidth: 1\n      }]\n    };\n  };\n  const chartData = prepareChartData();\n  const renderChart = () => {\n    if (!chartType || !labelColumn || !valueColumn) {\n      return null;\n    }\n\n    // For table view, render a simple data table\n    if (chartType === 'table') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: labelColumn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: valueColumn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(prepareChartData().labels.reduce((acc, label, index) => {\n              acc[label] = prepareChartData().datasets[0].data[index];\n              return acc;\n            }, {})).map(([label, value], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: isFormatted ? formatValue(value) : value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this);\n    }\n\n    // For chart views, use Chart.js\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: `${valueColumn} by ${labelColumn}`\n        },\n        tooltip: {\n          callbacks: {\n            label: function (context) {\n              let label = context.dataset.label || '';\n              if (label) {\n                label += ': ';\n              }\n              if (context.parsed !== null) {\n                const value = context.parsed;\n                label += isFormatted ? formatValue(value) : value;\n              }\n              return label;\n            }\n          }\n        }\n      },\n      scales: chartType !== 'pie' ? {\n        y: {\n          ticks: {\n            callback: function (value) {\n              return isFormatted ? formatValue(value) : value;\n            }\n          }\n        }\n      } : undefined\n    };\n    switch (chartType) {\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(Pie, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 16\n        }, this);\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '0.5rem',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '0.5rem',\n            flexWrap: 'wrap'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVisualize('bar'),\n            style: {\n              backgroundColor: chartType === 'bar' ? 'var(--accent-color)' : '#f0f0f0',\n              color: chartType === 'bar' ? 'white' : 'var(--text-primary)'\n            },\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVisualize('pie'),\n            style: {\n              backgroundColor: chartType === 'pie' ? 'var(--accent-color)' : '#f0f0f0',\n              color: chartType === 'pie' ? 'white' : 'var(--text-primary)'\n            },\n            children: \"Pie Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVisualize('line'),\n            style: {\n              backgroundColor: chartType === 'line' ? 'var(--accent-color)' : '#f0f0f0',\n              color: chartType === 'line' ? 'white' : 'var(--text-primary)'\n            },\n            children: \"Line Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVisualize('table'),\n            style: {\n              backgroundColor: chartType === 'table' ? 'var(--accent-color)' : '#f0f0f0',\n              color: chartType === 'table' ? 'white' : 'var(--text-primary)'\n            },\n            children: \"Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '0.5rem',\n            flexWrap: 'wrap',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Label:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: labelColumn || '',\n              onChange: e => setLabelColumn(e.target.value),\n              style: {\n                padding: '0.25rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), categoricalColumns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: col,\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: valueColumn || '',\n              onChange: e => setValueColumn(e.target.value),\n              style: {\n                padding: '0.25rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), numericColumns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: col,\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsFormatted(!isFormatted),\n            style: {\n              backgroundColor: isFormatted ? 'var(--accent-color)' : '#f0f0f0',\n              color: isFormatted ? 'white' : 'var(--text-primary)'\n            },\n            children: isFormatted ? 'Raw Values' : 'Format Values'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: renderChart()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(DataVisualization, \"F79yPQAS3dm6RoSS+yNSS/o2xlc=\");\n_c = DataVisualization;\nexport default DataVisualization;\nvar _c;\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"names":["React","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","Pie","Bar","Line","jsxDEV","_jsxDEV","register","DataVisualization","data","_s","chartType","setChartType","labelColumn","setLabelColumn","valueColumn","setValueColumn","isFormatted","setIsFormatted","numericColumns","columns","filter","col","rows","length","value","isNaN","Number","categoricalColumns","String","useEffect","preferredLabelColumns","preferredColumn","find","some","preferred","toLowerCase","includes","preferredValueColumns","handleVisualize","type","formatValue","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","toFixed","prepareChartData","labels","datasets","backgroundColor","groupedData","forEach","row","label","generateColors","count","colors","i","hue","push","Object","keys","values","borderColor","map","color","replace","borderWidth","chartData","renderChart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","reduce","acc","index","options","responsive","plugins","legend","position","title","display","text","tooltip","callbacks","context","dataset","parsed","scales","y","ticks","callback","style","flexWrap","gap","justifyContent","alignItems","marginBottom","onClick","onChange","e","target","padding","_c","$RefreshReg$"],"sources":["E:/test project/frontend/src/components/DataVisualization.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Pie, Bar, Line } from 'react-chartjs-2';\nimport './DataVisualization.css';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface DataVisualizationProps {\n  data: {\n    columns: string[];\n    rows: any[];\n  };\n}\n\nconst DataVisualization: React.FC<DataVisualizationProps> = ({ data }) => {\n  const [chartType, setChartType] = useState<'pie' | 'bar' | 'line' | 'table' | null>('bar');\n  const [labelColumn, setLabelColumn] = useState<string | null>(null);\n  const [valueColumn, setValueColumn] = useState<string | null>(null);\n  const [isFormatted, setIsFormatted] = useState<boolean>(true);\n\n  // Find numeric columns for values\n  const numericColumns = data.columns.filter(col => {\n    if (data.rows.length === 0) return false;\n    const value = data.rows[0][col];\n    return typeof value === 'number' || !isNaN(Number(value));\n  });\n\n  // Find string/categorical columns for labels\n  const categoricalColumns = data.columns.filter(col => {\n    if (data.rows.length === 0) return false;\n    const value = data.rows[0][col];\n    return typeof value === 'string' || value instanceof String;\n  });\n\n  // Auto-select appropriate columns on mount\n  React.useEffect(() => {\n    // Auto-select categorical column for labels\n    if (!labelColumn && categoricalColumns.length > 0) {\n      // Prefer department_name or name columns if available\n      const preferredLabelColumns = ['department_name', 'name', 'employee_first_name', 'employee_last_name'];\n      const preferredColumn = categoricalColumns.find(col =>\n        preferredLabelColumns.some(preferred => col.toLowerCase().includes(preferred.toLowerCase()))\n      );\n\n      setLabelColumn(preferredColumn || categoricalColumns[0]);\n    }\n\n    // Auto-select numeric column for values\n    if (!valueColumn && numericColumns.length > 0) {\n      // Prefer salary or amount columns if available\n      const preferredValueColumns = ['salary', 'amount', 'price', 'cost', 'revenue', 'count'];\n      const preferredColumn = numericColumns.find(col =>\n        preferredValueColumns.some(preferred => col.toLowerCase().includes(preferred.toLowerCase()))\n      );\n\n      setValueColumn(preferredColumn || numericColumns[0]);\n    }\n  }, [categoricalColumns, numericColumns, labelColumn, valueColumn]);\n\n  const handleVisualize = (type: 'pie' | 'bar' | 'line' | 'table') => {\n    setChartType(type);\n  };\n\n  const formatValue = (value: number): string => {\n    if (isFormatted) {\n      // Check if it's likely a currency value\n      if (valueColumn?.toLowerCase().includes('salary') ||\n          valueColumn?.toLowerCase().includes('price') ||\n          valueColumn?.toLowerCase().includes('cost') ||\n          valueColumn?.toLowerCase().includes('revenue')) {\n        return `$${value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n      }\n\n      // Format large numbers with commas\n      if (value >= 1000) {\n        return value.toLocaleString();\n      }\n\n      // Format percentages\n      if (valueColumn?.toLowerCase().includes('percent') || valueColumn?.toLowerCase().includes('rate')) {\n        return `${value.toFixed(2)}%`;\n      }\n    }\n\n    return String(value);\n  };\n\n  const prepareChartData = () => {\n    if (!labelColumn || !valueColumn || !data.rows.length) {\n      return {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: [],\n        }]\n      };\n    }\n\n    // Group data by label column and sum values\n    const groupedData: Record<string, number> = {};\n\n    data.rows.forEach(row => {\n      const label = String(row[labelColumn]);\n      const value = Number(row[valueColumn]);\n\n      if (!isNaN(value)) {\n        if (groupedData[label]) {\n          groupedData[label] += value;\n        } else {\n          groupedData[label] = value;\n        }\n      }\n    });\n\n    // Generate colors\n    const generateColors = (count: number) => {\n      const colors = [];\n      for (let i = 0; i < count; i++) {\n        const hue = (i * 137) % 360; // Use golden angle for nice distribution\n        colors.push(`hsl(${hue}, 70%, 60%)`);\n      }\n      return colors;\n    };\n\n    const labels = Object.keys(groupedData);\n    const values = Object.values(groupedData);\n    const colors = generateColors(labels.length);\n\n    return {\n      labels,\n      datasets: [{\n        label: valueColumn,\n        data: values,\n        backgroundColor: colors,\n        borderColor: colors.map(color => color.replace('60%', '50%')),\n        borderWidth: 1,\n      }]\n    };\n  };\n\n  const chartData = prepareChartData();\n\n  const renderChart = () => {\n    if (!chartType || !labelColumn || !valueColumn) {\n      return null;\n    }\n\n    // For table view, render a simple data table\n    if (chartType === 'table') {\n      return (\n        <div className=\"data-table-container\">\n          <table className=\"data-table\">\n            <thead>\n              <tr>\n                <th>{labelColumn}</th>\n                <th>{valueColumn}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(prepareChartData().labels.reduce((acc, label, index) => {\n                acc[label] = prepareChartData().datasets[0].data[index];\n                return acc;\n              }, {} as Record<string, number>)).map(([label, value], index) => (\n                <tr key={index}>\n                  <td>{label}</td>\n                  <td>{isFormatted ? formatValue(value as number) : value}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n\n    // For chart views, use Chart.js\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top' as const,\n        },\n        title: {\n          display: true,\n          text: `${valueColumn} by ${labelColumn}`,\n        },\n        tooltip: {\n          callbacks: {\n            label: function(context: any) {\n              let label = context.dataset.label || '';\n              if (label) {\n                label += ': ';\n              }\n              if (context.parsed !== null) {\n                const value = context.parsed;\n                label += isFormatted ? formatValue(value) : value;\n              }\n              return label;\n            }\n          }\n        }\n      },\n      scales: chartType !== 'pie' ? {\n        y: {\n          ticks: {\n            callback: function(value: any) {\n              return isFormatted ? formatValue(value) : value;\n            }\n          }\n        }\n      } : undefined\n    };\n\n    switch (chartType) {\n      case 'pie':\n        return <Pie data={chartData} options={options} />;\n      case 'bar':\n        return <Bar data={chartData} options={options} />;\n      case 'line':\n        return <Line data={chartData} options={options} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"data-visualization\">\n      <div className=\"visualization-controls\">\n        <div style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '0.5rem',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '1rem'\n        }}>\n          <div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap' }}>\n            <button\n              onClick={() => handleVisualize('bar')}\n              style={{\n                backgroundColor: chartType === 'bar' ? 'var(--accent-color)' : '#f0f0f0',\n                color: chartType === 'bar' ? 'white' : 'var(--text-primary)',\n              }}\n            >\n              Bar Chart\n            </button>\n            <button\n              onClick={() => handleVisualize('pie')}\n              style={{\n                backgroundColor: chartType === 'pie' ? 'var(--accent-color)' : '#f0f0f0',\n                color: chartType === 'pie' ? 'white' : 'var(--text-primary)',\n              }}\n            >\n              Pie Chart\n            </button>\n            <button\n              onClick={() => handleVisualize('line')}\n              style={{\n                backgroundColor: chartType === 'line' ? 'var(--accent-color)' : '#f0f0f0',\n                color: chartType === 'line' ? 'white' : 'var(--text-primary)',\n              }}\n            >\n              Line Chart\n            </button>\n            <button\n              onClick={() => handleVisualize('table')}\n              style={{\n                backgroundColor: chartType === 'table' ? 'var(--accent-color)' : '#f0f0f0',\n                color: chartType === 'table' ? 'white' : 'var(--text-primary)',\n              }}\n            >\n              Table\n            </button>\n          </div>\n\n          <div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap', alignItems: 'center' }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n              <label>Label:</label>\n              <select\n                value={labelColumn || ''}\n                onChange={(e) => setLabelColumn(e.target.value)}\n                style={{ padding: '0.25rem' }}\n              >\n                <option value=\"\">Select</option>\n                {categoricalColumns.map(col => (\n                  <option key={col} value={col}>{col}</option>\n                ))}\n              </select>\n            </div>\n\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n              <label>Value:</label>\n              <select\n                value={valueColumn || ''}\n                onChange={(e) => setValueColumn(e.target.value)}\n                style={{ padding: '0.25rem' }}\n              >\n                <option value=\"\">Select</option>\n                {numericColumns.map(col => (\n                  <option key={col} value={col}>{col}</option>\n                ))}\n              </select>\n            </div>\n\n            <button\n              onClick={() => setIsFormatted(!isFormatted)}\n              style={{\n                backgroundColor: isFormatted ? 'var(--accent-color)' : '#f0f0f0',\n                color: isFormatted ? 'white' : 'var(--text-primary)',\n              }}\n            >\n              {isFormatted ? 'Raw Values' : 'Format Values'}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"chart-container\">\n        {renderChart()}\n      </div>\n    </div>\n  );\n};\n\nexport default DataVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}