{"ast":null,"code":"var _jsxFileName = \"E:\\\\test project\\\\frontend\\\\src\\\\components\\\\ParticleBackground.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    let animationFrameId;\n    let particles = [];\n    let width = canvas.width;\n    let height = canvas.height;\n    class Particle {\n      constructor() {\n        this.x = void 0;\n        this.y = void 0;\n        this.size = void 0;\n        this.speedX = void 0;\n        this.speedY = void 0;\n        this.opacity = void 0;\n        this.x = Math.random() * width;\n        this.y = Math.random() * height;\n        this.size = Math.random() * 3 + 1;\n        this.speedX = Math.random() * 0.5 - 0.25;\n        this.speedY = Math.random() * 0.5 - 0.25;\n        this.opacity = Math.random() * 0.5;\n      }\n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        if (this.x < 0) this.x = width;\n        if (this.x > width) this.x = 0;\n        if (this.y < 0) this.y = height;\n        if (this.y > height) this.y = 0;\n      }\n      draw() {\n        if (!ctx) return;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;\n        ctx.fill();\n      }\n    }\n    const init = () => {\n      width = canvas.width;\n      height = canvas.height;\n      particles = [];\n      const numberOfParticles = Math.floor(width * height / 15000);\n      for (let i = 0; i < numberOfParticles; i++) {\n        particles.push(new Particle());\n      }\n    };\n    const animate = () => {\n      ctx.clearRect(0, 0, width, height);\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      init();\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    animate();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n      zIndex: -1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ParticleBackground;\nexport default ParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticleBackground\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ParticleBackground","_s","canvasRef","canvas","current","ctx","getContext","animationFrameId","particles","width","height","Particle","constructor","x","y","size","speedX","speedY","opacity","Math","random","update","draw","beginPath","arc","PI","fillStyle","fill","init","numberOfParticles","floor","i","push","animate","clearRect","forEach","particle","requestAnimationFrame","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","cancelAnimationFrame","ref","style","position","top","left","pointerEvents","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/test project/frontend/src/components/ParticleBackground.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst ParticleBackground: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    let animationFrameId: number;\r\n    let particles: Particle[] = [];\r\n    let width = canvas.width;\r\n    let height = canvas.height;\r\n\r\n    class Particle {\r\n      x: number;\r\n      y: number;\r\n      size: number;\r\n      speedX: number;\r\n      speedY: number;\r\n      opacity: number;\r\n\r\n      constructor() {\r\n        this.x = Math.random() * width;\r\n        this.y = Math.random() * height;\r\n        this.size = Math.random() * 3 + 1;\r\n        this.speedX = Math.random() * 0.5 - 0.25;\r\n        this.speedY = Math.random() * 0.5 - 0.25;\r\n        this.opacity = Math.random() * 0.5;\r\n      }\r\n\r\n      update() {\r\n        this.x += this.speedX;\r\n        this.y += this.speedY;\r\n\r\n        if (this.x < 0) this.x = width;\r\n        if (this.x > width) this.x = 0;\r\n        if (this.y < 0) this.y = height;\r\n        if (this.y > height) this.y = 0;\r\n      }\r\n\r\n      draw() {\r\n        if (!ctx) return;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n        ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;\r\n        ctx.fill();\r\n      }\r\n    }\r\n\r\n    const init = () => {\r\n      width = canvas.width;\r\n      height = canvas.height;\r\n      particles = [];\r\n      const numberOfParticles = Math.floor((width * height) / 15000);\r\n      for (let i = 0; i < numberOfParticles; i++) {\r\n        particles.push(new Particle());\r\n      }\r\n    };\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, width, height);\r\n      particles.forEach(particle => {\r\n        particle.update();\r\n        particle.draw();\r\n      });\r\n      animationFrameId = requestAnimationFrame(animate);\r\n    };\r\n\r\n    const handleResize = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      init();\r\n    };\r\n\r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    animate();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: -1,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ParticleBackground;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}