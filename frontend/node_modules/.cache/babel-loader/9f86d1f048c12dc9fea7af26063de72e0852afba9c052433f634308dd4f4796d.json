{"ast":null,"code":"var _jsxFileName = \"E:\\\\test project\\\\frontend\\\\src\\\\components\\\\ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport ThinkingAnimation from './ThinkingAnimation';\nimport { CodeBlock } from './CodeBlock';\nimport QueryResultTable from './QueryResultTable';\nimport DataVisualization from './DataVisualization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isThinking, setIsThinking] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  const handleSend = useCallback(async () => {\n    if (!inputText.trim()) return;\n    const userMessage = {\n      text: inputText,\n      isUser: true\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsThinking(true);\n    try {\n      const response = await axios.post('http://localhost:8000/api/chat', {\n        message: inputText\n      });\n\n      // The response now contains structured data\n      const responseData = response.data;\n\n      // Create a formatted message for display\n      let displayText = '';\n\n      // Add SQL query if available\n      if (responseData.sql_query) {\n        displayText += `SQL Query:\\n\\`\\`\\`sql\\n${responseData.sql_query}\\n\\`\\`\\`\\n\\n`;\n      }\n\n      // Add explanation if available\n      if (responseData.explanation && responseData.explanation.trim()) {\n        displayText += `${responseData.explanation}\\n\\n`;\n      }\n\n      // Add success/error message\n      if (!responseData.success && responseData.error) {\n        displayText += `Error: ${responseData.error}\\n\\n`;\n      } else if (responseData.message) {\n        // For data modification queries (UPDATE, INSERT, DELETE)\n        if (responseData.query_type && ['UPDATE', 'INSERT', 'DELETE'].includes(responseData.query_type)) {\n          displayText += `âœ… ${responseData.message}\\n\\n`;\n        } else {\n          // For SELECT queries\n          displayText += `${responseData.message}\\n\\n`;\n        }\n      }\n      const botMessage = {\n        text: displayText,\n        isUser: false,\n        data: responseData.data // Store the structured data for rendering\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prev => [...prev, {\n        text: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isUser: false\n      }]);\n    } finally {\n      setIsThinking(false);\n    }\n  }, [inputText]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      // Ctrl/Cmd + Enter to send message\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n        handleSend();\n      }\n      // Esc to clear input\n      if (e.key === 'Escape') {\n        setInputText('');\n      }\n      // Ctrl/Cmd + / to focus input\n      if ((e.ctrlKey || e.metaKey) && e.key === '/') {\n        var _inputRef$current;\n        e.preventDefault();\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleSend, setInputText]);\n  const toggleVisualization = index => {\n    setMessages(prev => prev.map((msg, i) => i === index ? {\n      ...msg,\n      showVisualization: !msg.showVisualization\n    } : msg));\n  };\n  const renderMessage = (message, index) => {\n    const text = message.text;\n    const sqlMatches = text.match(/```sql\\n([\\s\\S]*?)```/g);\n    if (message.isUser) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          backgroundColor: 'var(--accent-color)',\n          color: 'white',\n          padding: '1rem 1.25rem',\n          maxWidth: '80%',\n          marginBottom: '1rem'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Check if data is suitable for visualization (has numeric columns)\n    const hasVisualizableData = message.data && message.data.columns && message.data.rows && message.data.rows.length > 0 && message.data.columns.some(col => {\n      const value = message.data.rows[0][col];\n      return typeof value === 'number' || !isNaN(Number(value));\n    });\n\n    // Render the message with SQL code blocks and data table\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '90%',\n        marginBottom: '1rem'\n      },\n      children: [text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          backgroundColor: 'white',\n          color: 'var(--text-primary)',\n          padding: '1rem 1.25rem',\n          marginBottom: '0.5rem'\n        },\n        children: sqlMatches ?\n        // If there are SQL code blocks, split and render them\n        text.split(/(```sql\\n[\\s\\S]*?```)/g).map((part, partIndex) => {\n          if (part.startsWith('```sql')) {\n            const code = part.replace(/```sql\\n([\\s\\S]*?)```/, '$1').trim();\n            return /*#__PURE__*/_jsxDEV(CodeBlock, {\n              code: code\n            }, partIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 26\n            }, this);\n          }\n          return part ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: part\n          }, partIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 31\n          }, this) : null;\n        }) :\n        // Otherwise just render the text\n        text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), message.data && message.data.columns && message.data.rows && message.data.columns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(QueryResultTable, {\n          headers: message.data.columns.map(col => {\n            // Format column headers for better readability\n            if (col === 'department_identifier' && message.data.columns.includes('department_name')) {\n              return 'Department ID';\n            } else if (col === 'department_name') {\n              return 'Department';\n            } else if (col === 'employee_identifier') {\n              return 'Employee ID';\n            } else if (col === 'employee_first_name') {\n              return 'First Name';\n            } else if (col === 'employee_last_name') {\n              return 'Last Name';\n            } else if (col === 'employee_salary') {\n              return 'Salary';\n            } else if (col === 'employee_hire_date') {\n              return 'Hire Date';\n            }\n            return col;\n          }),\n          data: message.data.rows.map(row => message.data.columns.map(col => {\n            // Format specific columns for better display\n            if (col === 'employee_salary' && typeof row[col] === 'number') {\n              return `$${row[col].toLocaleString()}`;\n            } else if (col === 'employee_hire_date') {\n              return new Date(row[col]).toLocaleDateString();\n            }\n            return row[col];\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), hasVisualizableData && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(DataVisualization, {\n            data: message.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      maxWidth: '900px',\n      margin: '0 auto',\n      padding: '1.5rem',\n      height: '80vh',\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        flex: 1,\n        overflowY: 'auto',\n        padding: '1.25rem',\n        marginBottom: '1.25rem',\n        border: '1px solid var(--border-color)',\n        backgroundColor: '#f9fafb'\n      },\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: message.isUser ? 'flex-end' : 'flex-start'\n        },\n        children: renderMessage(message, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)), isThinking && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-start'\n        },\n        children: /*#__PURE__*/_jsxDEV(ThinkingAnimation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        display: 'flex',\n        gap: '1rem',\n        padding: '1rem',\n        backgroundColor: 'white',\n        borderTop: '1px solid var(--border-color)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSend();\n          }\n        },\n        placeholder: \"Type your question here... (Ctrl + / to focus, Ctrl + Enter to send)\",\n        style: {\n          flex: 1,\n          resize: 'none',\n          minHeight: '2.5rem',\n          maxHeight: '150px',\n          padding: '0.75rem 1rem',\n          backgroundColor: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSend(),\n        disabled: isThinking || !inputText.trim(),\n        style: {\n          opacity: isThinking || !inputText.trim() ? 0.6 : 1\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"FO8RvGtYmBOTpO/eMfrgbV46lx4=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","ThinkingAnimation","CodeBlock","QueryResultTable","DataVisualization","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","inputText","setInputText","isThinking","setIsThinking","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","text","isUser","prev","response","post","message","responseData","data","displayText","sql_query","explanation","success","error","query_type","includes","botMessage","console","handleKeyPress","e","ctrlKey","metaKey","key","_inputRef$current","preventDefault","focus","window","addEventListener","removeEventListener","toggleVisualization","index","map","msg","i","showVisualization","renderMessage","sqlMatches","match","className","style","backgroundColor","color","padding","maxWidth","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","hasVisualizableData","columns","rows","length","some","col","value","isNaN","Number","split","part","partIndex","startsWith","code","replace","marginTop","headers","row","toLocaleString","Date","toLocaleDateString","margin","height","display","flexDirection","flex","overflowY","border","justifyContent","ref","gap","borderTop","onChange","target","onKeyDown","shiftKey","placeholder","resize","minHeight","maxHeight","onClick","disabled","opacity","_c","$RefreshReg$"],"sources":["E:/test project/frontend/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport ThinkingAnimation from './ThinkingAnimation';\r\nimport { CodeBlock } from './CodeBlock';\r\nimport QueryResultTable from './QueryResultTable';\r\nimport DataVisualization from './DataVisualization';\r\n\r\ninterface Message {\r\n  text: string;\r\n  isUser: boolean;\r\n  data?: any;\r\n}\r\n\r\nconst ChatInterface: React.FC = () => {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isThinking, setIsThinking] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, scrollToBottom]);\r\n\r\n  const handleSend = useCallback(async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const userMessage: Message = {\r\n      text: inputText,\r\n      isUser: true,\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n    setIsThinking(true);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/chat', {\r\n        message: inputText,\r\n      });\r\n\r\n      // The response now contains structured data\r\n      const responseData = response.data;\r\n\r\n      // Create a formatted message for display\r\n      let displayText = '';\r\n\r\n      // Add SQL query if available\r\n      if (responseData.sql_query) {\r\n        displayText += `SQL Query:\\n\\`\\`\\`sql\\n${responseData.sql_query}\\n\\`\\`\\`\\n\\n`;\r\n      }\r\n\r\n      // Add explanation if available\r\n      if (responseData.explanation && responseData.explanation.trim()) {\r\n        displayText += `${responseData.explanation}\\n\\n`;\r\n      }\r\n\r\n      // Add success/error message\r\n      if (!responseData.success && responseData.error) {\r\n        displayText += `Error: ${responseData.error}\\n\\n`;\r\n      } else if (responseData.message) {\r\n        // For data modification queries (UPDATE, INSERT, DELETE)\r\n        if (responseData.query_type && ['UPDATE', 'INSERT', 'DELETE'].includes(responseData.query_type)) {\r\n          displayText += `âœ… ${responseData.message}\\n\\n`;\r\n        } else {\r\n          // For SELECT queries\r\n          displayText += `${responseData.message}\\n\\n`;\r\n        }\r\n      }\r\n\r\n      const botMessage: Message = {\r\n        text: displayText,\r\n        isUser: false,\r\n        data: responseData.data // Store the structured data for rendering\r\n      };\r\n\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      setMessages(prev => [...prev, {\r\n        text: \"Sorry, I encountered an error while generating the response. Please try again.\",\r\n        isUser: false\r\n      }]);\r\n    } finally {\r\n      setIsThinking(false);\r\n    }\r\n  }, [inputText]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyPress = (e: KeyboardEvent) => {\r\n      // Ctrl/Cmd + Enter to send message\r\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\r\n        handleSend();\r\n      }\r\n      // Esc to clear input\r\n      if (e.key === 'Escape') {\r\n        setInputText('');\r\n      }\r\n      // Ctrl/Cmd + / to focus input\r\n      if ((e.ctrlKey || e.metaKey) && e.key === '/') {\r\n        e.preventDefault();\r\n        inputRef.current?.focus();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n  }, [handleSend, setInputText]);\r\n\r\n  const toggleVisualization = (index: number) => {\r\n    setMessages(prev =>\r\n      prev.map((msg, i) =>\r\n        i === index ? { ...msg, showVisualization: !msg.showVisualization } : msg\r\n      )\r\n    );\r\n  };\r\n\r\n  const renderMessage = (message: Message, index: number) => {\r\n    const text = message.text;\r\n    const sqlMatches = text.match(/```sql\\n([\\s\\S]*?)```/g);\r\n\r\n    if (message.isUser) {\r\n      return (\r\n        <div className=\"card\" style={{\r\n          backgroundColor: 'var(--accent-color)',\r\n          color: 'white',\r\n          padding: '1rem 1.25rem',\r\n          maxWidth: '80%',\r\n          marginBottom: '1rem'\r\n        }}>\r\n          {text}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Check if data is suitable for visualization (has numeric columns)\r\n    const hasVisualizableData = message.data &&\r\n                               message.data.columns &&\r\n                               message.data.rows &&\r\n                               message.data.rows.length > 0 &&\r\n                               message.data.columns.some((col: string) => {\r\n                                 const value = message.data.rows[0][col];\r\n                                 return typeof value === 'number' || !isNaN(Number(value));\r\n                               });\r\n\r\n    // Render the message with SQL code blocks and data table\r\n    return (\r\n      <div style={{ maxWidth: '90%', marginBottom: '1rem' }}>\r\n        {/* Render SQL and text parts */}\r\n        {text && (\r\n          <div className=\"card\" style={{\r\n            backgroundColor: 'white',\r\n            color: 'var(--text-primary)',\r\n            padding: '1rem 1.25rem',\r\n            marginBottom: '0.5rem'\r\n          }}>\r\n            {sqlMatches ? (\r\n              // If there are SQL code blocks, split and render them\r\n              text.split(/(```sql\\n[\\s\\S]*?```)/g).map((part, partIndex) => {\r\n                if (part.startsWith('```sql')) {\r\n                  const code = part.replace(/```sql\\n([\\s\\S]*?)```/, '$1').trim();\r\n                  return <CodeBlock key={partIndex} code={code} />;\r\n                }\r\n                return part ? <p key={partIndex}>{part}</p> : null;\r\n              })\r\n            ) : (\r\n              // Otherwise just render the text\r\n              text\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Render data table if available */}\r\n        {message.data && message.data.columns && message.data.rows && message.data.columns.length > 0 && (\r\n          <div style={{ marginTop: '1rem' }}>\r\n            <QueryResultTable\r\n              headers={message.data.columns.map((col: string) => {\r\n                // Format column headers for better readability\r\n                if (col === 'department_identifier' && message.data.columns.includes('department_name')) {\r\n                  return 'Department ID';\r\n                } else if (col === 'department_name') {\r\n                  return 'Department';\r\n                } else if (col === 'employee_identifier') {\r\n                  return 'Employee ID';\r\n                } else if (col === 'employee_first_name') {\r\n                  return 'First Name';\r\n                } else if (col === 'employee_last_name') {\r\n                  return 'Last Name';\r\n                } else if (col === 'employee_salary') {\r\n                  return 'Salary';\r\n                } else if (col === 'employee_hire_date') {\r\n                  return 'Hire Date';\r\n                }\r\n                return col;\r\n              })}\r\n              data={message.data.rows.map((row: any) =>\r\n                message.data.columns.map((col: string) => {\r\n                  // Format specific columns for better display\r\n                  if (col === 'employee_salary' && typeof row[col] === 'number') {\r\n                    return `$${row[col].toLocaleString()}`;\r\n                  } else if (col === 'employee_hire_date') {\r\n                    return new Date(row[col]).toLocaleDateString();\r\n                  }\r\n                  return row[col];\r\n                })\r\n              )}\r\n            />\r\n\r\n            {/* Visualization options directly at the top of the table */}\r\n            {hasVisualizableData && (\r\n              <div style={{ marginTop: '1rem' }}>\r\n                <DataVisualization data={message.data} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" style={{\r\n      maxWidth: '900px',\r\n      margin: '0 auto',\r\n      padding: '1.5rem',\r\n      height: '80vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      backgroundColor: 'white'\r\n    }}>\r\n      <div className=\"card\" style={{\r\n        flex: 1,\r\n        overflowY: 'auto',\r\n        padding: '1.25rem',\r\n        marginBottom: '1.25rem',\r\n        border: '1px solid var(--border-color)',\r\n        backgroundColor: '#f9fafb'\r\n      }}>\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: message.isUser ? 'flex-end' : 'flex-start',\r\n            }}\r\n          >\r\n            {renderMessage(message, index)}\r\n          </div>\r\n        ))}\r\n        {isThinking && (\r\n          <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\r\n            <ThinkingAnimation />\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"card\" style={{\r\n        display: 'flex',\r\n        gap: '1rem',\r\n        padding: '1rem',\r\n        backgroundColor: 'white',\r\n        borderTop: '1px solid var(--border-color)'\r\n      }}>\r\n        <textarea\r\n          ref={inputRef}\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n              e.preventDefault();\r\n              handleSend();\r\n            }\r\n          }}\r\n          placeholder=\"Type your question here... (Ctrl + / to focus, Ctrl + Enter to send)\"\r\n          style={{\r\n            flex: 1,\r\n            resize: 'none',\r\n            minHeight: '2.5rem',\r\n            maxHeight: '150px',\r\n            padding: '0.75rem 1rem',\r\n            backgroundColor: 'white'\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => handleSend()}\r\n          disabled={isThinking || !inputText.trim()}\r\n          style={{\r\n            opacity: isThinking || !inputText.trim() ? 0.6 : 1\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}