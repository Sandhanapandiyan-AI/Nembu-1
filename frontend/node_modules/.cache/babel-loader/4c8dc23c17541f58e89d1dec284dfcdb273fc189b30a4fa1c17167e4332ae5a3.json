{"ast":null,"code":"var _jsxFileName = \"E:\\\\test project\\\\frontend\\\\src\\\\components\\\\ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport ThinkingAnimation from './ThinkingAnimation';\nimport QueryResultTable from './QueryResultTable';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isThinking, setIsThinking] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  const handleSend = useCallback(async () => {\n    if (!inputText.trim()) return;\n    const userMessage = {\n      text: inputText,\n      isUser: true\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsThinking(true);\n    try {\n      const response = await axios.post('http://localhost:8000/api/chat', {\n        message: inputText\n      });\n      const botMessage = {\n        text: response.data.response,\n        isUser: false\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        text: 'Sorry, there was an error processing your request.',\n        isUser: false\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsThinking(false);\n    }\n  }, [inputText]);\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUser ? 'user-message' : 'bot-message'}`,\n        children: message.isUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(QueryResultTable, {\n            response: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)), isThinking && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot-message\",\n        children: /*#__PURE__*/_jsxDEV(ThinkingAnimation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Ask a question...\",\n        rows: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: !inputText.trim() || isThinking,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInterface, \"hZvVjA/oYErdAwvy3m+oNgUtM6g=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","ThinkingAnimation","QueryResultTable","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","inputText","setInputText","isThinking","setIsThinking","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","text","isUser","prev","response","post","message","botMessage","data","error","console","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","target","onKeyPress","placeholder","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/test project/frontend/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport ThinkingAnimation from './ThinkingAnimation';\r\nimport QueryResultTable from './QueryResultTable';\r\nimport './ChatInterface.css';\r\n\r\ninterface Message {\r\n    text: string;\r\n    isUser: boolean;\r\n}\r\n\r\nconst ChatInterface: React.FC = () => {\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [inputText, setInputText] = useState('');\r\n    const [isThinking, setIsThinking] = useState(false);\r\n    const messagesEndRef = useRef<HTMLDivElement>(null);\r\n    const inputRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    const scrollToBottom = useCallback(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages, scrollToBottom]);\r\n\r\n    const handleSend = useCallback(async () => {\r\n        if (!inputText.trim()) return;\r\n\r\n        const userMessage: Message = {\r\n            text: inputText,\r\n            isUser: true,\r\n        };\r\n\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInputText('');\r\n        setIsThinking(true);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/api/chat', {\r\n                message: inputText,\r\n            });\r\n\r\n            const botMessage: Message = {\r\n                text: response.data.response,\r\n                isUser: false,\r\n            };\r\n\r\n            setMessages(prev => [...prev, botMessage]);\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n            const errorMessage: Message = {\r\n                text: 'Sorry, there was an error processing your request.',\r\n                isUser: false,\r\n            };\r\n            setMessages(prev => [...prev, errorMessage]);\r\n        } finally {\r\n            setIsThinking(false);\r\n        }\r\n    }, [inputText]);\r\n\r\n    const handleKeyPress = (e: React.KeyboardEvent) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSend();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"messages-container\">\r\n                {messages.map((message, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`message ${message.isUser ? 'user-message' : 'bot-message'}`}\r\n                    >\r\n                        {message.isUser ? (\r\n                            <div className=\"message-content\">{message.text}</div>\r\n                        ) : (\r\n                            <div className=\"message-content\">\r\n                                <QueryResultTable response={message.text} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n                {isThinking && (\r\n                    <div className=\"message bot-message\">\r\n                        <ThinkingAnimation />\r\n                    </div>\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <textarea\r\n                    ref={inputRef}\r\n                    value={inputText}\r\n                    onChange={(e) => setInputText(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    placeholder=\"Ask a question...\"\r\n                    rows={1}\r\n                />\r\n                <button onClick={handleSend} disabled={!inputText.trim() || isThinking}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}